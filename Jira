import os
import openpyxl
from openpyxl.utils import get_column_letter
from openpyxl.worksheet.datavalidation import DataValidation
import requests

# Jira and Zephyr Squad configurations
JIRA_URL = "https://your-jira-instance.com/rest/api/2/"
ZEPHYR_URL = "https://your-jira-instance.com/rest/zapi/latest/"
AUTH_TOKEN = "your_auth_token"
PROJECT_KEY = "YOUR_PROJECT_KEY"
HEADERS = {
    "Authorization": f"Bearer {AUTH_TOKEN}",
    "Content-Type": "application/json"
}

TEMPLATE_FILE = 'Jira_Test_Cases_Template.xlsx'

def fetch_project_specific_dropdown_values(field_name, project_key):
    """Fetch dropdown values for a specific field in the specified Jira project."""
    url = f"{JIRA_URL}issue/createmeta?projectKeys={project_key}&expand=projects.issuetypes.fields"
    response = requests.get(url, headers=HEADERS)
    response.raise_for_status()

    project_meta = response.json()
    fields = project_meta['projects'][0]['issuetypes'][0]['fields']  # Assuming first issue type is 'Test'

    if field_name in fields:
        allowed_values = fields[field_name].get('allowedValues', [])
        return [option['name'] for option in allowed_values]
    return []

def create_template():
    """Create an Excel template for Jira test cases."""
    if not os.path.exists(TEMPLATE_FILE):
        wb = openpyxl.Workbook()
        ws = wb.active
        ws.title = "Test Cases"

        # Define columns
        columns = ["Test Case Summary", "Test Step", "Priority"]

        # Write header
        for i, col in enumerate(columns, 1):
            ws.cell(row=1, column=i, value=col)

        # Add dropdown for Priority for the specific project
        priority_options = fetch_project_specific_dropdown_values("priority", PROJECT_KEY)
        if priority_options:
            dv = DataValidation(type="list", formula1=f'"{",".join(priority_options)}"', showDropDown=True)
            ws.add_data_validation(dv)
            for row in range(2, 100):  # Assuming maximum of 100 test cases
                dv.add(ws[f'C{row}'])  # Priority is in column C

        # Save the file
        wb.save(TEMPLATE_FILE)
        print(f"Template created: {TEMPLATE_FILE}")
    else:
        print("Template already exists. Ready for upload.")

def read_excel_and_upload():
    """Read the Excel file and upload test cases to Jira."""
    if not os.path.exists(TEMPLATE_FILE):
        print(f"Template file '{TEMPLATE_FILE}' not found. Please create it first.")
        return

    wb = openpyxl.load_workbook(TEMPLATE_FILE)
    ws = wb.active

    previous_summary = None
    test_cases_to_upload = []

    # Collect test case details
    for row in ws.iter_rows(min_row=2, max_row=ws.max_row, values_only=True):
        summary, step, priority = row
        if summary:
            # Detect change in Test Case Summary
            if summary != previous_summary:
                test_case_data = {
                    "summary": summary,
                    "steps": [],
                    "priority": priority
                }
                test_cases_to_upload.append(test_case_data)
                previous_summary = summary

            # Add step to the latest test case
            if test_cases_to_upload:
                test_cases_to_upload[-1]['steps'].append(step)

    if test_cases_to_upload:
        confirm = input(f"Found {len(test_cases_to_upload)} test cases. Do you want to upload them? (yes/no): ")
        if confirm.lower() == 'yes':
            for test_case in test_cases_to_upload:
                upload_to_jira(test_case)
        else:
            print("Upload canceled.")
    else:
        print("No valid test cases found for upload. Please populate the template.")

def upload_to_jira(test_case):
    """Upload test case and steps to Jira using Zephyr Squad."""
    issue_data = {
        "fields": {
            "project": {
                "key": PROJECT_KEY
            },
            "summary": test_case['summary'],
            "priority": {"name": test_case['priority']},
            "issuetype": {
                "name": "Test"  # Assuming "Test" is the issue type
            }
        }
    }

    response = requests.post(f"{JIRA_URL}issue", headers=HEADERS, json=issue_data)
    if response.status_code == 201:
        issue_key = response.json()['key']
        print(f"Test case '{test_case['summary']}' created with issue key: {issue_key}")

        # Upload steps to Zephyr (for the newly created test case)
        for step in test_case['steps']:
            step_data = {
                "step": step,
                "issueId": issue_key
            }
            response = requests.post(f"{ZEPHYR_URL}/teststep/{issue_key}", headers=HEADERS, json=step_data)
            if response.status_code == 200:
                print(f"Step '{step}' added to test case {issue_key}")
            else:
                print(f"Failed to add step '{step}' to test case {issue_key}")
    else:
        print(f"Failed to create test case '{test_case['summary']}'")

def main():
    if os.path.exists(TEMPLATE_FILE):
        print(f"Loading test cases from '{TEMPLATE_FILE}'...")
        read_excel_and_upload()
    else:
        print("Template not found. Creating template...")
        create_template()

if __name__ == "__main__":
    main()

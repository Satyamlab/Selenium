import requests
import jwt
import time
import hashlib

# Function to generate JWT token
def generate_jwt(zephyr_base_url, method, api_path, zephyr_access_key, zephyr_secret_key, account_id):
    expiration_time = int(time.time()) + 3600  # Token valid for 1 hour
    canonical_request = f'{method}&{api_path}&'
    qsh = hashlib.sha256(canonical_request.encode('utf-8')).hexdigest()

    payload = {
        'sub': account_id,
        'qsh': qsh,
        'iss': zephyr_access_key,
        'exp': expiration_time,
        'iat': int(time.time())
    }

    return jwt.encode(payload, zephyr_secret_key, algorithm='HS256')


# Function to fetch test cycles from Zephyr for a given project
def get_test_cycles(jira_url, zephyr_url, project_id, account_id, zephyr_access_key, zephyr_secret_key):
    # API Path to fetch test cycles
    api_path = f'/public/rest/api/1.0/cycles/search?projectId={project_id}'
    full_url = f'{zephyr_url}{api_path}'

    # Generate JWT token
    jwt_token = generate_jwt(zephyr_url, 'GET', api_path, zephyr_access_key, zephyr_secret_key, account_id)

    # Prepare headers
    headers = {
        'Authorization': f'JWT {jwt_token}',
        'zapiAccessKey': zephyr_access_key,
        'Content-Type': 'application/json'
    }

    # Make the GET request to fetch test cycles
    response = requests.get(full_url, headers=headers)

    # Check the response
    if response.status_code == 200:
        test_cycles = response.json()
        return test_cycles
    else:
        print(f"Failed to retrieve test cycles. Status code: {response.status_code}")
        print("Response:", response.text)
        return None


# Example usage
jira_url = "https://your-jira-cloud-instance.atlassian.net"
zephyr_url = "https://prod-play.zephyr4jiracloud.com"
project_id = "12345"  # Replace with your actual Jira project ID
account_id = "your_jira_account_id"  # Your Jira account ID
zephyr_access_key = "your_zephyr_access_key"  # Zephyr access key
zephyr_secret_key = "your_zephyr_secret_key"  # Zephyr secret key

# Call the function to get test cycles
test_cycles = get_test_cycles(jira_url, zephyr_url, project_id, account_id, zephyr_access_key, zephyr_secret_key)

# Display the test cycles
if test_cycles:
    for cycle in test_cycles['executionCycles']:
        print(f"Cycle Name: {cycle['name']}, Cycle ID: {cycle['id']}")

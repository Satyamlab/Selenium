def remove_objects_with_none(data):
    """
    Recursively removes objects from the JSON if any key in those objects has a None value.
    """
    if isinstance(data, dict):
        # If any value is None, remove the entire object
        if any(value is None for value in data.values()):
            return None
        # Recursively clean each value in the dictionary
        cleaned_data = {
            key: remove_objects_with_none(value)
            for key, value in data.items()
            if remove_objects_with_none(value) is not None
        }
        return cleaned_data if cleaned_data else None
    elif isinstance(data, list):
        # Process each list item recursively
        cleaned_list = [remove_objects_with_none(item) for item in data]
        return [item for item in cleaned_list if item is not None]
    else:
        # For non-dict and non-list values, return as is
        return data

# Example usage
issue_data = {'fields': {'priority': {'value': None}}}

cleaned_data = remove_objects_with_none(issue_data)

import json
print(json.dumps(cleaned_data, indent=2))

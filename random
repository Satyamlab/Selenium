def remove_empty_fields(data):
    """
    Recursively remove keys with None, empty lists, or empty dictionaries.
    Remove entire objects where all nested keys or the object itself are None or empty.
    """
    if isinstance(data, dict):
        # Process each key-value pair and recursively clean
        cleaned_data = {
            k: remove_empty_fields(v)
            for k, v in data.items()
            if v not in [None, {}, []]  # Remove direct None, empty dicts, and lists
        }
        # If the entire dictionary becomes empty, return None to signal its removal
        return cleaned_data if cleaned_data else None
    elif isinstance(data, list):
        # Recursively clean each element in the list
        cleaned_list = [remove_empty_fields(v) for v in data if v not in [None, {}, []]]
        return cleaned_list if cleaned_list else None
    else:
        # For non-dict, non-list values, return as is
        return data
